{"version":3,"sources":["utils/API.js","components/Grid/index.js","components/SavedResult/index.js","pages/SavedBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","components/Nav/index.js","components/Jumbotron/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["query","axios","get","savedBooks","post","id","delete","Container","fluid","children","className","Row","Col","size","split","map","join","SavedResult","props","savedbook","title","src","image","alt","authors","description","_id","onClick","handleDeleteButton","href","link","target","rel","SaveBook","state","handleDeleteBtn","API","then","res","componentDidMount","catch","err","console","log","setState","data","this","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","event","handleSavedButton","SearchBooks","error","preventDefault","items","Error","results","result","key","volumeInfo","imageLinks","thumbnail","infoLink","filter","Nav","Jumbotron","Footer","App","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9990b56e.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default {\r\n    // grab book from google\r\n    getGoogleSearchBooks: function (query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\r\n    },\r\n    // grab all books\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // grab book w/ id\r\n    getBook: function (id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n    // save book to db\r\n    saveBook: function (savedBooks) {\r\n        return axios.post(\"/api/books\", savedBooks);\r\n    },\r\n    // delete book by id\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`containers${fluid ? \"-fluid\" : \"\"}`}>\r\n        {children}\r\n    </div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div className={size\r\n            .split(\" \")\r\n            .map(size => \"col-\" + size)\r\n            .join(\" \")}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\nimport \"./style.css\";\r\n\r\nconst SavedResult = props => {\r\n    return (\r\n        <Container>\r\n            <h3>Saved Books</h3>\r\n            {props.savedBooks.map(savedbook => {\r\n                return (\r\n                    <div>\r\n                        <div className=\"card mb-2\">\r\n                            <div className=\"card-body\">\r\n                                <Row id={savedbook.title + \"Card\"} key={savedbook._id}>\r\n                                    <Col size=\"2\">\r\n                                        <img src={savedbook.image} alt={savedbook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"10\" className=\"pl-2\">\r\n                                        <h3 className=\"bookTitle\">{savedbook.title}</h3>\r\n                                        <h4 className=\"bookAuthor\">{savedbook.authors}</h4>\r\n                                        <p className=\"bookDescription pr-3\">{savedbook.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <button className=\"delete btn mt-4 ml-3 mr-1\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\r\n                                        Delete Book</button>\r\n                                    <a href={savedbook.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <button className=\"view btn mt-4\">\r\n                                            View Book</button>\r\n                                    </a>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SavedResult;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport SavedResult from \"../components/SavedResult\"\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleDeleteBtn = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SavedResult savedBooks={this.state.savedBooks} handleDeleteBtn={this.handleDeleteBtn} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SaveBook;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchForm = props => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"BookSearchLabel\"><h3>Search For Books</h3></label>\r\n                <br></br>\r\n                <input className=\"col-12 form-control\"\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"searchBook\"\r\n                    placeholder=\"Search for a book by Title\"\r\n                    onChange={props.handleInputChange} />\r\n            </div>\r\n            <button type=\"submit\" className=\"submitBtn btn\" onClick={props.handleFormSubmit}>\r\n                Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport { Container, Row, Col } from \"../Grid\"\r\nimport \"./style.css\";\r\n\r\nconst SearchResult = props => {\r\n    return (\r\n        <Container>\r\n            <h3>Search Results</h3>\r\n            {props.books.map(book => {\r\n                return (\r\n                    <div className=\"card mb-5\">\r\n                        <div className=\"card-body\">\r\n                            <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\r\n                                <Col size=\"2\">\r\n                                    <img src={book.image} alt={book.title} />\r\n                                </Col>\r\n                                <Col size=\"10\" className=\"pl-2\">\r\n                                    <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                    <h4 className=\"bookAuthor\">{book.authors}</h4>\r\n                                    <p className=\"bookDescription pr-3\">{book.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <button className=\"save btn mt-4 ml-3 mr-1\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                    Save Book</button>\r\n                                <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <button className=\"view btn mt-4\">\r\n                                        View Book</button>\r\n                                </a>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n            })}\r\n        </Container>\r\n    )\r\n}\r\nexport default SearchResult;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result.id,\r\n                            id: result.id,\r\n                            title: result.volumeInfo.title,\r\n                            authors: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    this.setState({ books: results, search: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n\r\n    handleSavedButton = event => {\r\n        event.preventDefault();\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        API.saveBook(savedBooks)\r\n            .then(console.log(savedBooks))\r\n            .catch(err => console.log(err));\r\n    };\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container>\r\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default SearchBooks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Google Book Search</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\">Search Books</a>\r\n                    </li>\r\n                    <li className=\"nav-item\" id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\">Saved Books</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\r\n            <div className=\"container text-center\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"page-footer\">\r\n        <div className=\"container-fluid text-center\">\r\n            <p><strong>Books are cool, afterall</strong></p>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SaveBooks from \"./pages/SavedBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport Nav from \"./components/Nav\";\nimport Jumbotron from \"./components/Jumbotron\"\nimport Footer from \"./components/Footer\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Jumbotron />\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={SaveBooks} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (!isLocalhost) {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            } else {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log(\"New content is available; please refresh.\");\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}